package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, T_dato, Int, Cadena, If, Else, Do, While, For,ComillasD,ComillasS,FUNC,
    IGUAL, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, LLAVEPARENTESISABRE,LLAVEPARENTESISCIERRA,
    LLAVECORCHETEABRE, LLAVECORCHETECIERRA, LLAVECUADRADAABRE, LLAVECUADRADACIERRA, Main, P_coma,IDENTIFICADOR,
    DIGITOS, ERROR,COMA;
non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR;

start with INICIO;

INICIO ::= 
    Int Main LLAVEPARENTESISABRE LLAVEPARENTESISCIERRA LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA |
    Main LLAVEPARENTESISABRE LLAVEPARENTESISCIERRA LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA
;
SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA DO_WHILE
    DO_WHILE |
    SENTENCIA FOR |
    FOR
;
DECLARACION ::= 
    Int IDENTIFICADOR P_coma | 
    Int IDENTIFICADOR Op_atribucion DIGITOS P_coma |
    Int IDENTIFICADOR IGUAL DIGITOS P_coma |
    Int IDENTIFICADOR Op_incremento P_coma | 
    Int Op_incremento IDENTIFICADOR P_coma | 
    T_dato IDENTIFICADOR P_coma | 
    T_dato IDENTIFICADOR Op_atribucion DIGITOS P_coma |
    T_dato IDENTIFICADOR IGUAL DIGITOS P_coma |
    T_dato IDENTIFICADOR Op_incremento P_coma | 
    T_dato Op_incremento IDENTIFICADOR P_coma | 
    Cadena IDENTIFICADOR Op_atribucion Comillas Comillas P_coma |
    Cadena IDENTIFICADOR IGUAL Comillas Comillas P_coma |
    Cadena IDENTIFICADOR Op_atribucion Comillas IDENTIFICADOR Comillas P_coma |
    Cadena IDENTIFICADOR IGUAL Comillas IDENTIFICADOR Comillas P_coma
;
IF ::= If LLAVEPARENTESISABRE SENTENCIA_BOOLEANA LLAVEPARENTESISCIERRA LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA
;
SENTENCIA_BOOLEANA ::= 
    Op_booleano | 
    IDENTIFICADOR Op_relacional Op_booleano |
    IDENTIFICADOR Op_relacional DIGITOS |
    IDENTIFICADOR Op_relacional IDENTIFICADOR |
    IDENTIFICADOR Op_relacional Comillas Comillas |
    IDENTIFICADOR Op_relacional Comillas IDENTIFICADOR Comillas
;
IF_ELSE ::= If LLAVEPARENTESISABRE SENTENCIA_BOOLEANA LLAVEPARENTESISCIERRA LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA Else LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA
;
WHILE ::= While LLAVEPARENTESISABRE SENTENCIA_BOOLEANA LLAVEPARENTESISCIERRA LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA
;
DO_WHILE ::= Do LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA While LLAVEPARENTESISABRE SENTENCIA_BOOLEANA LLAVEPARENTESISCIERRA P_coma
;
FOR ::= For LLAVEPARENTESISABRE SENTENCIA_FOR LLAVEPARENTESISCIERRA LLAVECORCHETEABRE SENTENCIA LLAVECORCHETECIERRA
;
SENTENCIA_FOR ::=
    T_dato IDENTIFICADOR IGUAL DIGITOS P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    IDENTIFICADOR IGUAL DIGITOS P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;
DECLARACION_FOR ::= 
    IDENTIFICADOR Op_atribucion DIGITOS |
    IDENTIFICADOR Op_incremento | 
    Op_incremento IDENTIFICADOR
;